name: Build notify-forwarder

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - target: darwin_arm64
            runner: macos-latest
            out_dir: Darwin_arm64
            artifact: notify-forwarder-darwin-arm64
            install_zig: false
          - target: darwin_x86_64
            runner: macos-latest
            out_dir: Darwin_x86_64
            artifact: notify-forwarder-darwin-x86_64
            install_zig: false
          - target: linux_arm64
            runner: ubuntu-24.04-arm
            out_dir: Linux_arm64
            artifact: notify-forwarder-linux-arm64
            install_zig: true
          - target: linux_x86_64
            runner: ubuntu-latest
            out_dir: Linux_x86_64
            artifact: notify-forwarder-linux-x86_64
            install_zig: true

    steps:
      - uses: actions/checkout@v4

      - name: Install Zig
        if: ${{ matrix.install_zig }}
        uses: mlugg/setup-zig@v2

      - name: Build target
        run: |
          make clean
          make ${{ matrix.target }}
          file _build/${{ matrix.out_dir }}/notify-forwarder
          _build/${{ matrix.out_dir }}/notify-forwarder -h || true

      - name: Verify binary architecture
        run: |
          FILE_OUTPUT="$(file _build/${{ matrix.out_dir }}/notify-forwarder)"
          echo "$FILE_OUTPUT"
          case "${{ matrix.target }}" in
            darwin_arm64)
              PATTERN="Mach-O 64-bit executable arm64"
              ;;
            darwin_x86_64)
              PATTERN="Mach-O 64-bit executable x86_64"
              ;;
            linux_arm64)
              PATTERN="ELF 64-bit LSB executable, ARM aarch64"
              ;;
            linux_x86_64)
              PATTERN="ELF 64-bit LSB executable, x86-64"
              ;;
            *)
              echo "No architecture pattern configured for target ${{ matrix.target }}" >&2
              exit 1
              ;;
          esac
          if ! grep -q "$PATTERN" <<< "$FILE_OUTPUT"; then
            echo "Unexpected architecture for ${{ matrix.target }}" >&2
            exit 1
          fi

      - name: Package artifact
        run: |
          mkdir -p dist
          cp _build/${{ matrix.out_dir }}/notify-forwarder dist/notify-forwarder-${{ matrix.target }}
          find dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: dist/notify-forwarder-${{ matrix.target }}
          if-no-files-found: error

  release:
    name: Publish release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List artifacts
        run: ls -R dist

      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          shopt -s globstar
          mapfile -t ARTIFACTS < <(find dist -type f -name 'notify-forwarder-*' -print)
          if [ ${#ARTIFACTS[@]} -eq 0 ]; then
            echo "No artifacts found to upload" >&2
            exit 1
          fi
          printf 'Discovered release artifacts:\n'
          printf '  %s\n' "${ARTIFACTS[@]}"
          git for-each-ref refs/tags/${TAG_NAME} --format='%(contents)' > release-notes.txt
          cat release-notes.txt
          gh release create "${TAG_NAME}" "${ARTIFACTS[@]}" \
            --title "Notify Forwarder ${TAG_NAME}" \
            --notes-file release-notes.txt